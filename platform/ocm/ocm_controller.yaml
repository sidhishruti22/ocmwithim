apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: ocm-system
    app.kubernetes.io/part-of: ocm
  name: componentdescriptors.delivery.ocm.software
spec:
  group: delivery.ocm.software
  names:
    kind: ComponentDescriptor
    listKind: ComponentDescriptorList
    plural: componentdescriptors
    shortNames:
    - cd
    singular: componentdescriptor
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ComponentDescriptor is the Schema for the componentdescriptors
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ComponentDescriptorSpec adds a version to the top level component
              descriptor definition.
            properties:
              references:
                description: References references component version dependencies
                  that can be resolved in the current context.
                items:
                  description: Reference describes the reference to another component
                    in the registry.
                  properties:
                    componentName:
                      description: ComponentName describes the remote name of the
                        referenced object
                      type: string
                    digest:
                      description: Digest is the optional digest of the referenced
                        component.
                      properties:
                        hashAlgorithm:
                          type: string
                        normalisationAlgorithm:
                          type: string
                        value:
                          type: string
                      required:
                      - hashAlgorithm
                      - normalisationAlgorithm
                      - value
                      type: object
                    extraIdentity:
                      additionalProperties:
                        type: string
                      description: ExtraIdentity is the identity of an object. An
                        additional label with key "name" ist not allowed
                      type: object
                    labels:
                      description: Labels defines an optional set of additional labels
                        describing the object.
                      items:
                        description: Label is a label that can be set on objects.
                        properties:
                          name:
                            description: Name is the unique name of the label.
                            type: string
                          signing:
                            description: Signing describes whether the label should
                              be included into the signature
                            type: boolean
                          value:
                            description: Value is the json/yaml data of the label
                            format: byte
                            type: string
                          version:
                            description: Version is the optional specification version
                              of the attribute value
                            type: string
                        required:
                        - name
                        - value
                        type: object
                      type: array
                    name:
                      description: Name is the context unique name of the object.
                      type: string
                    version:
                      description: Version is the semver version of the object.
                      type: string
                  required:
                  - componentName
                  - name
                  - version
                  type: object
                type: array
              resources:
                description: Resources defines all resources that are created by the
                  component and by a third party.
                items:
                  description: Resource describes a resource dependency of a component.
                  properties:
                    access:
                      description: Access describes the type specific method to access
                        the defined resource.
                      properties:
                        type:
                          description: Type describes the type of the object.
                          type: string
                      required:
                      - type
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    digest:
                      description: Digest is the optional digest of the referenced
                        resource.
                      properties:
                        hashAlgorithm:
                          type: string
                        normalisationAlgorithm:
                          type: string
                        value:
                          type: string
                      required:
                      - hashAlgorithm
                      - normalisationAlgorithm
                      - value
                      type: object
                    extraIdentity:
                      additionalProperties:
                        type: string
                      description: ExtraIdentity is the identity of an object. An
                        additional label with key "name" ist not allowed
                      type: object
                    labels:
                      description: Labels defines an optional set of additional labels
                        describing the object.
                      items:
                        description: Label is a label that can be set on objects.
                        properties:
                          name:
                            description: Name is the unique name of the label.
                            type: string
                          signing:
                            description: Signing describes whether the label should
                              be included into the signature
                            type: boolean
                          value:
                            description: Value is the json/yaml data of the label
                            format: byte
                            type: string
                          version:
                            description: Version is the optional specification version
                              of the attribute value
                            type: string
                        required:
                        - name
                        - value
                        type: object
                      type: array
                    name:
                      description: Name is the context unique name of the object.
                      type: string
                    relation:
                      description: Relation describes the relation of the resource
                        to the component. Can be a local or external resource
                      type: string
                    srcRef:
                      description: SourceRef defines a list of source names. These
                        names reference the sources defines in `component.sources`.
                      items:
                        description: SourceRef defines a reference to a source
                        properties:
                          identitySelector:
                            additionalProperties:
                              type: string
                            description: IdentitySelector defines the identity that
                              is used to match a source.
                            type: object
                          labels:
                            description: Labels defines an optional set of additional
                              labels describing the object.
                            items:
                              description: Label is a label that can be set on objects.
                              properties:
                                name:
                                  description: Name is the unique name of the label.
                                  type: string
                                signing:
                                  description: Signing describes whether the label
                                    should be included into the signature
                                  type: boolean
                                value:
                                  description: Value is the json/yaml data of the
                                    label
                                  format: byte
                                  type: string
                                version:
                                  description: Version is the optional specification
                                    version of the attribute value
                                  type: string
                              required:
                              - name
                              - value
                              type: object
                            type: array
                        type: object
                      type: array
                    type:
                      description: Type describes the type of the object.
                      type: string
                    version:
                      description: Version is the semver version of the object.
                      type: string
                  required:
                  - access
                  - name
                  - type
                  - version
                  type: object
                type: array
              sources:
                description: Sources defines sources that produced the component
                items:
                  description: Source is the definition of a component's source.
                  properties:
                    access:
                      description: UnstructuredTypedObject describes a generic typed
                        object.
                      properties:
                        type:
                          description: Type describes the type of the object.
                          type: string
                      required:
                      - type
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    extraIdentity:
                      additionalProperties:
                        type: string
                      description: ExtraIdentity is the identity of an object. An
                        additional label with key "name" ist not allowed
                      type: object
                    labels:
                      description: Labels defines an optional set of additional labels
                        describing the object.
                      items:
                        description: Label is a label that can be set on objects.
                        properties:
                          name:
                            description: Name is the unique name of the label.
                            type: string
                          signing:
                            description: Signing describes whether the label should
                              be included into the signature
                            type: boolean
                          value:
                            description: Value is the json/yaml data of the label
                            format: byte
                            type: string
                          version:
                            description: Version is the optional specification version
                              of the attribute value
                            type: string
                        required:
                        - name
                        - value
                        type: object
                      type: array
                    name:
                      description: Name is the context unique name of the object.
                      type: string
                    type:
                      description: Type describes the type of the object.
                      type: string
                    version:
                      description: Version is the semver version of the object.
                      type: string
                  required:
                  - access
                  - name
                  - type
                  - version
                  type: object
                type: array
              version:
                type: string
            required:
            - version
            type: object
          status:
            description: ComponentDescriptorStatus defines the observed state of ComponentDescriptor
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: ocm-system
    app.kubernetes.io/part-of: ocm
  name: componentversions.delivery.ocm.software
spec:
  group: delivery.ocm.software
  names:
    kind: ComponentVersion
    listKind: ComponentVersionList
    plural: componentversions
    shortNames:
    - cv
    singular: componentversion
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ComponentVersion is the Schema for the ComponentVersions API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ComponentVersionSpec defines the desired state of ComponentVersion
            properties:
              component:
                description: 'Every Component Version has a name. Name and version
                  are the identifier for a Component Version and therefor for the
                  artifact set described by it. A component name SHOULD reference
                  a location where the component’s resources (typically source code,
                  and/or documentation) are hosted. It MUST be a DNS compliant name
                  with lowercase characters and MUST contain a name after the domain.
                  Examples: - github.com/pathToYourRepo'
                type: string
              interval:
                type: string
              references:
                properties:
                  expand:
                    type: boolean
                type: object
              repository:
                description: Repository defines the OCM Repository.
                properties:
                  secretRef:
                    description: SecretRef is a reference to a secret used to access
                      the OCI repository.
                    properties:
                      name:
                        type: string
                    required:
                    - name
                    type: object
                  url:
                    description: 'TODO@souleb: do we need a scheme for the url? add
                      description for each field Do we need a type field? (e.g. oci,
                      git, s3, etc.)'
                    type: string
                required:
                - url
                type: object
              verify:
                items:
                  description: Signature defines the details of a signature to use
                    for verification.
                  properties:
                    name:
                      description: Name of the signature.
                      type: string
                    publicKey:
                      description: Key which is used for verification.
                      properties:
                        secretRef:
                          description: SecretRef is a reference to a secret used to
                            access the OCI repository.
                          properties:
                            name:
                              type: string
                          required:
                          - name
                          type: object
                      required:
                      - secretRef
                      type: object
                  required:
                  - name
                  - publicKey
                  type: object
                type: array
              version:
                description: Component versions refer to specific snapshots of a component.
                  A common scenario being the release of a component.
                properties:
                  allowRollback:
                    type: boolean
                  semver:
                    type: string
                type: object
            required:
            - component
            - interval
            - repository
            - version
            type: object
          status:
            description: ComponentVersionStatus defines the observed state of ComponentVersion
            properties:
              componentDescriptor:
                description: Reference contains all referred components and their
                  versions.
                properties:
                  componentDescriptorRef:
                    description: NamespacedObjectReference contains enough information
                      to locate the referenced Kubernetes resource object in any namespace.
                    properties:
                      name:
                        description: Name of the referent.
                        type: string
                      namespace:
                        description: Namespace of the referent, when not specified
                          it acts as LocalObjectReference.
                        type: string
                    required:
                    - name
                    type: object
                  extraIdentity:
                    additionalProperties:
                      type: string
                    type: object
                  name:
                    type: string
                  references:
                    x-kubernetes-preserve-unknown-fields: true
                  version:
                    type: string
                required:
                - name
                - version
                type: object
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: ObservedGeneration is the last reconciled generation.
                format: int64
                type: integer
              reconciledVersion:
                type: string
              verified:
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: ocm-system
    app.kubernetes.io/part-of: ocm
  name: configurations.delivery.ocm.software
spec:
  group: delivery.ocm.software
  names:
    kind: Configuration
    listKind: ConfigurationList
    plural: configurations
    shortNames:
    - cf
    singular: configuration
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Configuration is the Schema for the configurations API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MutationSpec defines a common spec between Localization and
              Configuration.
            properties:
              componentVersionRef:
                description: NamespacedObjectReference contains enough information
                  to locate the referenced Kubernetes resource object in any namespace.
                properties:
                  name:
                    description: Name of the referent.
                    type: string
                  namespace:
                    description: Namespace of the referent, when not specified it
                      acts as LocalObjectReference.
                    type: string
                required:
                - name
                type: object
              configRef:
                properties:
                  resource:
                    description: Source defines a possible incoming format for sources
                      that this object needs for further configuration/localization
                      steps.
                    minProperties: 1
                    properties:
                      resourceRef:
                        description: 'ResourceRef define a resource. TODO: Change
                          this to ocmmetav1.ResourceReference The ocmmetav1.ResourceReference
                          can also contain version!'
                        properties:
                          extraIdentity:
                            additionalProperties:
                              type: string
                            type: object
                          name:
                            type: string
                          referencePath:
                            description: 'ReferencePath is a list of references with
                              identities that include this resource. referencePath:
                              - name: installer'
                            items:
                              additionalProperties:
                                type: string
                              type: object
                            type: array
                          version:
                            type: string
                        required:
                        - name
                        type: object
                      sourceRef:
                        description: NamespacedObjectKindReference contains enough
                          information to locate the typed referenced Kubernetes resource
                          object in any namespace.
                        properties:
                          apiVersion:
                            description: API version of the referent, if not specified
                              the Kubernetes preferred version will be used.
                            type: string
                          kind:
                            description: Kind of the referent.
                            type: string
                          name:
                            description: Name of the referent.
                            type: string
                          namespace:
                            description: Namespace of the referent, when not specified
                              it acts as LocalObjectReference.
                            type: string
                        required:
                        - kind
                        - name
                        type: object
                    type: object
                required:
                - resource
                type: object
              interval:
                type: string
              patchStrategicMerge:
                description: PatchStrategicMerge contains the source and target details
                  required to perform a strategic merge
                properties:
                  source:
                    description: PatchStrategicMergeSource contains the details required
                      to retrieve the source from a Flux source
                    properties:
                      path:
                        type: string
                      sourceRef:
                        description: PatchStrategicMergeSourceRef contains the flux
                          source identity metadata
                        properties:
                          kind:
                            enum:
                            - OCIRepository
                            - GitRepository
                            - Bucket
                            type: string
                          name:
                            type: string
                          namespace:
                            type: string
                        required:
                        - kind
                        - name
                        - namespace
                        type: object
                    required:
                    - path
                    - sourceRef
                    type: object
                  target:
                    description: PatchStrategicMergeTarget provides details about
                      the merge target
                    properties:
                      path:
                        type: string
                    required:
                    - path
                    type: object
                required:
                - source
                - target
                type: object
              snapshotTemplate:
                description: SnapshotTemplateSpec defines the template used to create
                  snapshots
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    type: object
                  createFluxSource:
                    type: boolean
                  labels:
                    additionalProperties:
                      type: string
                    description: 'TODO@souleb: add a description, is that actually
                      used?'
                    type: object
                  name:
                    type: string
                required:
                - name
                type: object
              source:
                description: Source defines a possible incoming format for sources
                  that this object needs for further configuration/localization steps.
                minProperties: 1
                properties:
                  resourceRef:
                    description: 'ResourceRef define a resource. TODO: Change this
                      to ocmmetav1.ResourceReference The ocmmetav1.ResourceReference
                      can also contain version!'
                    properties:
                      extraIdentity:
                        additionalProperties:
                          type: string
                        type: object
                      name:
                        type: string
                      referencePath:
                        description: 'ReferencePath is a list of references with identities
                          that include this resource. referencePath: - name: installer'
                        items:
                          additionalProperties:
                            type: string
                          type: object
                        type: array
                      version:
                        type: string
                    required:
                    - name
                    type: object
                  sourceRef:
                    description: NamespacedObjectKindReference contains enough information
                      to locate the typed referenced Kubernetes resource object in
                      any namespace.
                    properties:
                      apiVersion:
                        description: API version of the referent, if not specified
                          the Kubernetes preferred version will be used.
                        type: string
                      kind:
                        description: Kind of the referent.
                        type: string
                      name:
                        description: Name of the referent.
                        type: string
                      namespace:
                        description: Namespace of the referent, when not specified
                          it acts as LocalObjectReference.
                        type: string
                    required:
                    - kind
                    - name
                    type: object
                type: object
              values:
                x-kubernetes-preserve-unknown-fields: true
            required:
            - componentVersionRef
            - interval
            - snapshotTemplate
            - source
            type: object
          status:
            description: MutationStatus defines a common status for Localizations
              and Configurations.
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              lastAppliedComponentVersion:
                description: LastAppliedComponentVersion tracks the last applied component
                  version. If there is a change we fire off a reconcile loop to get
                  that new version.
                type: string
              lastAppliedConfigSourceDigest:
                description: LastAppliedConfigSourceDigest defines the last seen config
                  source digest that has been encountered by this object. Only applicable
                  if Source is a SourceRef.
                type: string
              lastAppliedPatchMergeSourceDigest:
                description: LastAppliedPatchMergeSourceDigest defines the last seen
                  patch merge source digest that has been encountered by this object.
                  Only applicable if Source is a SourceRef.
                type: string
              lastAppliedSourceDigest:
                description: LastAppliedSourceDigest defines the last seen source
                  digest that has been encountered by this object. Only applicable
                  if Source is a SourceRef.
                type: string
              latestConfigVersion:
                type: string
              latestSnapshotDigest:
                type: string
              observedGeneration:
                description: ObservedGeneration is the last reconciled generation.
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: ocm-system
    app.kubernetes.io/part-of: ocm
  name: localizations.delivery.ocm.software
spec:
  group: delivery.ocm.software
  names:
    kind: Localization
    listKind: LocalizationList
    plural: localizations
    shortNames:
    - cl
    singular: localization
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Localization is the Schema for the localizations API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MutationSpec defines a common spec between Localization and
              Configuration.
            properties:
              componentVersionRef:
                description: NamespacedObjectReference contains enough information
                  to locate the referenced Kubernetes resource object in any namespace.
                properties:
                  name:
                    description: Name of the referent.
                    type: string
                  namespace:
                    description: Namespace of the referent, when not specified it
                      acts as LocalObjectReference.
                    type: string
                required:
                - name
                type: object
              configRef:
                properties:
                  resource:
                    description: Source defines a possible incoming format for sources
                      that this object needs for further configuration/localization
                      steps.
                    minProperties: 1
                    properties:
                      resourceRef:
                        description: 'ResourceRef define a resource. TODO: Change
                          this to ocmmetav1.ResourceReference The ocmmetav1.ResourceReference
                          can also contain version!'
                        properties:
                          extraIdentity:
                            additionalProperties:
                              type: string
                            type: object
                          name:
                            type: string
                          referencePath:
                            description: 'ReferencePath is a list of references with
                              identities that include this resource. referencePath:
                              - name: installer'
                            items:
                              additionalProperties:
                                type: string
                              type: object
                            type: array
                          version:
                            type: string
                        required:
                        - name
                        type: object
                      sourceRef:
                        description: NamespacedObjectKindReference contains enough
                          information to locate the typed referenced Kubernetes resource
                          object in any namespace.
                        properties:
                          apiVersion:
                            description: API version of the referent, if not specified
                              the Kubernetes preferred version will be used.
                            type: string
                          kind:
                            description: Kind of the referent.
                            type: string
                          name:
                            description: Name of the referent.
                            type: string
                          namespace:
                            description: Namespace of the referent, when not specified
                              it acts as LocalObjectReference.
                            type: string
                        required:
                        - kind
                        - name
                        type: object
                    type: object
                required:
                - resource
                type: object
              interval:
                type: string
              patchStrategicMerge:
                description: PatchStrategicMerge contains the source and target details
                  required to perform a strategic merge
                properties:
                  source:
                    description: PatchStrategicMergeSource contains the details required
                      to retrieve the source from a Flux source
                    properties:
                      path:
                        type: string
                      sourceRef:
                        description: PatchStrategicMergeSourceRef contains the flux
                          source identity metadata
                        properties:
                          kind:
                            enum:
                            - OCIRepository
                            - GitRepository
                            - Bucket
                            type: string
                          name:
                            type: string
                          namespace:
                            type: string
                        required:
                        - kind
                        - name
                        - namespace
                        type: object
                    required:
                    - path
                    - sourceRef
                    type: object
                  target:
                    description: PatchStrategicMergeTarget provides details about
                      the merge target
                    properties:
                      path:
                        type: string
                    required:
                    - path
                    type: object
                required:
                - source
                - target
                type: object
              snapshotTemplate:
                description: SnapshotTemplateSpec defines the template used to create
                  snapshots
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    type: object
                  createFluxSource:
                    type: boolean
                  labels:
                    additionalProperties:
                      type: string
                    description: 'TODO@souleb: add a description, is that actually
                      used?'
                    type: object
                  name:
                    type: string
                required:
                - name
                type: object
              source:
                description: Source defines a possible incoming format for sources
                  that this object needs for further configuration/localization steps.
                minProperties: 1
                properties:
                  resourceRef:
                    description: 'ResourceRef define a resource. TODO: Change this
                      to ocmmetav1.ResourceReference The ocmmetav1.ResourceReference
                      can also contain version!'
                    properties:
                      extraIdentity:
                        additionalProperties:
                          type: string
                        type: object
                      name:
                        type: string
                      referencePath:
                        description: 'ReferencePath is a list of references with identities
                          that include this resource. referencePath: - name: installer'
                        items:
                          additionalProperties:
                            type: string
                          type: object
                        type: array
                      version:
                        type: string
                    required:
                    - name
                    type: object
                  sourceRef:
                    description: NamespacedObjectKindReference contains enough information
                      to locate the typed referenced Kubernetes resource object in
                      any namespace.
                    properties:
                      apiVersion:
                        description: API version of the referent, if not specified
                          the Kubernetes preferred version will be used.
                        type: string
                      kind:
                        description: Kind of the referent.
                        type: string
                      name:
                        description: Name of the referent.
                        type: string
                      namespace:
                        description: Namespace of the referent, when not specified
                          it acts as LocalObjectReference.
                        type: string
                    required:
                    - kind
                    - name
                    type: object
                type: object
              values:
                x-kubernetes-preserve-unknown-fields: true
            required:
            - componentVersionRef
            - interval
            - snapshotTemplate
            - source
            type: object
          status:
            description: MutationStatus defines a common status for Localizations
              and Configurations.
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              lastAppliedComponentVersion:
                description: LastAppliedComponentVersion tracks the last applied component
                  version. If there is a change we fire off a reconcile loop to get
                  that new version.
                type: string
              lastAppliedConfigSourceDigest:
                description: LastAppliedConfigSourceDigest defines the last seen config
                  source digest that has been encountered by this object. Only applicable
                  if Source is a SourceRef.
                type: string
              lastAppliedPatchMergeSourceDigest:
                description: LastAppliedPatchMergeSourceDigest defines the last seen
                  patch merge source digest that has been encountered by this object.
                  Only applicable if Source is a SourceRef.
                type: string
              lastAppliedSourceDigest:
                description: LastAppliedSourceDigest defines the last seen source
                  digest that has been encountered by this object. Only applicable
                  if Source is a SourceRef.
                type: string
              latestConfigVersion:
                type: string
              latestSnapshotDigest:
                type: string
              observedGeneration:
                description: ObservedGeneration is the last reconciled generation.
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: ocm-system
    app.kubernetes.io/part-of: ocm
  name: resources.delivery.ocm.software
spec:
  group: delivery.ocm.software
  names:
    kind: Resource
    listKind: ResourceList
    plural: resources
    shortNames:
    - cre
    singular: resource
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Resource is the Schema for the resources API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ResourceSpec defines the desired state of Resource
            properties:
              componentVersionRef:
                description: NamespacedObjectReference contains enough information
                  to locate the referenced Kubernetes resource object in any namespace.
                properties:
                  name:
                    description: Name of the referent.
                    type: string
                  namespace:
                    description: Namespace of the referent, when not specified it
                      acts as LocalObjectReference.
                    type: string
                required:
                - name
                type: object
              interval:
                type: string
              resource:
                description: Resource names a Source that this Resource watches.
                properties:
                  extraIdentity:
                    additionalProperties:
                      type: string
                    type: object
                  name:
                    type: string
                  referencePath:
                    description: 'ReferencePath is a list of references with identities
                      that include this resource. referencePath: - name: installer'
                    items:
                      additionalProperties:
                        type: string
                      type: object
                    type: array
                  version:
                    type: string
                required:
                - name
                type: object
              snapshotTemplate:
                description: SnapshotTemplateSpec defines the template used to create
                  snapshots
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    type: object
                  createFluxSource:
                    type: boolean
                  labels:
                    additionalProperties:
                      type: string
                    description: 'TODO@souleb: add a description, is that actually
                      used?'
                    type: object
                  name:
                    type: string
                required:
                - name
                type: object
            required:
            - componentVersionRef
            - interval
            - resource
            - snapshotTemplate
            type: object
          status:
            description: ResourceStatus defines the observed state of Resource
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              lastAppliedComponentVersion:
                description: LastAppliedComponentVersion tracks the last applied component
                  version. If there is a change we fire off a reconcile loop to get
                  that new version.
                type: string
              lastAppliedResourceVersion:
                type: string
              observedGeneration:
                description: ObservedGeneration is the last reconciled generation.
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: ocm-system
    app.kubernetes.io/part-of: ocm
  name: snapshots.delivery.ocm.software
spec:
  group: delivery.ocm.software
  names:
    kind: Snapshot
    listKind: SnapshotList
    plural: snapshots
    shortNames:
    - cs
    singular: snapshot
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Snapshot is the Schema for the snapshots API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: SnapshotSpec defines the desired state of Snapshot
            properties:
              createFluxSource:
                type: boolean
              digest:
                type: string
              identity:
                additionalProperties:
                  type: string
                description: Identity defines a cache entry. It is used to generate
                  a hash that is then used by the caching layer to identify an entry.
                maxProperties: 20
                type: object
              tag:
                type: string
            required:
            - digest
            - identity
            - tag
            type: object
          status:
            description: SnapshotStatus defines the observed state of Snapshot
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              digest:
                description: Digest is calculated by the caching layer.
                type: string
              observedGeneration:
                description: ObservedGeneration is the last reconciled generation.
                format: int64
                type: integer
              repositoryURL:
                description: RepositoryURL has the concrete URL pointing to the local
                  registry including the service name.
                type: string
              tag:
                description: Tag defines the explicit tag that was used to create
                  the related snapshot and cache entry.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: ocm-system
    app.kubernetes.io/part-of: ocm
  name: ocm-controller
  namespace: ocm-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/instance: ocm-system
    app.kubernetes.io/part-of: ocm
  name: leader-election-role
  namespace: ocm-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: ocm-system
    app.kubernetes.io/part-of: ocm
  name: ocm-controller-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - pods
  - services
  verbs:
  - create
  - delete
  - get
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - secrets
  - serviceaccounts
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - create
  - delete
  - get
  - patch
  - update
- apiGroups:
  - delivery.ocm.software
  resources:
  - componentdescriptors
  - componentversions
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - delivery.ocm.software
  resources:
  - componentversions/finalizers
  verbs:
  - update
- apiGroups:
  - delivery.ocm.software
  resources:
  - componentversions/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - delivery.ocm.software
  resources:
  - configurations
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - delivery.ocm.software
  resources:
  - configurations/finalizers
  verbs:
  - update
- apiGroups:
  - delivery.ocm.software
  resources:
  - configurations/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - delivery.ocm.software
  resources:
  - localizations
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - delivery.ocm.software
  resources:
  - localizations/finalizers
  verbs:
  - update
- apiGroups:
  - delivery.ocm.software
  resources:
  - localizations/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - delivery.ocm.software
  resources:
  - resources
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - delivery.ocm.software
  resources:
  - resources/finalizers
  verbs:
  - update
- apiGroups:
  - delivery.ocm.software
  resources:
  - resources/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - delivery.ocm.software
  resources:
  - snapshots
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - delivery.ocm.software
  resources:
  - snapshots/finalizers
  verbs:
  - update
- apiGroups:
  - delivery.ocm.software
  resources:
  - snapshots/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - buckets
  - gitrepositories
  - ocirepositories
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - ocirepositories
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: ocm-system
    app.kubernetes.io/part-of: ocm
  name: ocm-leader-election-rolebinding
  namespace: ocm-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: leader-election-role
subjects:
- kind: ServiceAccount
  name: ocm-controller
  namespace: ocm-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: ocm-system
    app.kubernetes.io/part-of: ocm
  name: ocm-controller-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ocm-controller-manager-role
subjects:
- kind: ServiceAccount
  name: ocm-controller
  namespace: ocm-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: ocm-system
    app.kubernetes.io/part-of: ocm
    control-plane: controller
  name: ocm-controller
  namespace: ocm-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ocm-controller
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        app: ocm-controller
    spec:
      containers:
      - args:
        - --zap-log-level=4
        - --leader-elect
        - --oci-registry-addr=registry.ocm-system.svc.cluster.local:5000
        command:
        - /manager
        image: ghcr.io/open-component-model/ocm-controller:v0.6.0
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      initContainers:
      - image: ghcr.io/open-component-model/ocm-registry:v0.0.1-dev
        imagePullPolicy: IfNotPresent
        name: init-registry
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: ocm-controller
      terminationGracePeriodSeconds: 10
